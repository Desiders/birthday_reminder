version: "3.9"

services:
  bot:
    profiles: [ "bot" ]
    container_name: birthday_reminder.bot
    hostname: birthday_reminder.bot
    build:
      context: .
    restart: "unless-stopped"
    expose:
      - 5000
    ports:
      - 5000:5000
    networks:
      - birthday_reminder.postgres.network
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    profiles: [ "bot", "migration" ]
    container_name: birthday_reminder.postgres
    image: "postgres:15-alpine"
    hostname: birthday_reminder.postgres
    restart: "unless-stopped"
    expose:
      - "5432"
    ports:
      - "127.0.0.1:${POSTGRES_PORT:-5432}:5432"
    networks:
      - birthday_reminder.postgres.network
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: ${POSTGRES_USER:-$USER}
      POSTGRES_DB: ${POSTGRES_DB:-$USER}
    volumes:
      - birthday_reminder.postgres.data:/var/lib/postgresql/users:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
  
  postgres_migration:
    profiles: [ "migration" ]
    container_name: birthday_reminder.postgres_migration
    build:
      context: .
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - birthday_reminder.postgres.network
    env_file:
      - .env
    volumes:
      - ./alembic.ini:/app/alembic.ini:ro
    command: ["python", "-m", "alembic", "-c", "/app/alembic.ini", "upgrade", "head"]

volumes:
  birthday_reminder.postgres.data: {}

networks:
  birthday_reminder.postgres.network: {}